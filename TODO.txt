IDEA: it will be easy to have multiple animation classes
- you could have one for a more chill mode that's not music-reactive

IDEA: we can have preprogrammed coordinates for the moving heads
- Have them flash or change color to the beat, change target position to the beat
- Sometimes can mirror the yaw rotation, but keep the pitch the same
TODO: establish good/safe positions for moving heads
- start with specifically the positions we don't want

IDEA: mode with only red, orange and white

TODO: bpm estimation, may be a useful quantity

TODO: trigger some events every 2 or 4 beats

-----------------------------------------------------------------------------

We have multiple quantities we want to track
- Loudness, with multiple windows (instant, short, long)
- Beat number
- Maybe we can have an animation class with a start_thread method
- Would the fixtures just be global?
- Maybe we can init with the dmx thread

TODO: animation patterns with 4 small fixtures
- move left/right
- could even manually encode little sequences, ['xxxx', 'x__x']
- could start prototyping with just 2

TODO: method in animation to have everything strobe
- strobe(val)
- trigger when intensity above normal, keep for 8 or 16 beats?







[DONE] TODO: implement fix.rgbw field, use numpy array
- can then dispense with dimming for now?

[DONE] TODO: random_rgb and random_rgbw
- return numpy arrays

[DONE] TODO: make dmx set support iterables
hasattr(name, '__len__'):

[DONE] TODO: give fixtures names

[DONE] TODO: loudness estimation
norm = np.linalg.norm(indata)*10
- we also need to keep some kind of max, or simply a slower running average
- loudness_fast_avg, loudness_slow_avg
- use numpy.std(v)

[DONE] TODO: create a shortcut method for setting dmx val
dmx[self.chan_no + 0] = map_float_to(self.pan, 0, 255)
- dmx.set_float(start_chan, chan_no, val, min=0, max=255)

[DONE] TODO: create a class for the Docooler RGBW moving head

[DONE] TODO: convert colors to FP values in [0, 1]

[DONE] TODO: function to map [0, 1] value into range, map_to()
- have fixtures use FP values for everything

[DONE] TODO: max DMX update rate is 40Hz
- add in comment, aim for 35Hz
- measure time between updates, should be 25ms

[DONE] TODO: DMXUniverse.start_dmx_thread()

[DONE] TODO: DMXUniverse.add_fixture()
